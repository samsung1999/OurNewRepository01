<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hbar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
image_xscale = random_range(0.5, 1);
image_yscale = image_xscale;

leftLimit = x-(sprite_width/2)+(image_xscale*75);
rightLimit = x+(sprite_width/2)-(image_xscale*75);
barLength = sprite_width;  
sliderX = leftLimit;
xx = 0;
grab = false;
percentage = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!mouse_check_button(mb_left))
{
    grab = false;
}

if (grab == false)//if this object is not being grabbed
{
    exit;//exit this event
}
else
{
    //otherwise change its coordinates
    if ((mouse_x + xx) &gt; leftLimit) &amp;&amp; ((mouse_x + xx) &lt; rightLimit)
    {
        sliderX = mouse_x + xx;
    }
    else if ((mouse_x + xx) &lt; leftLimit)
    {
        sliderX = leftLimit// + 1;
    }
    else if ((mouse_x + xx) &gt; rightLimit)
    {
        sliderX = rightLimit// - 1;
    }
}

percentage = round(((sliderX - leftLimit)/(rightLimit-leftLimit))*100);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>grab = false;//this object is not being grabbed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (mouse_x &gt; leftLimit) &amp;&amp; (mouse_x &lt; rightLimit)
//{
//    a.x = mouse_x;
//}


grab = true;//this object is being grabbed

//get relative click position
xx = sliderX - mouse_x;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_sprite(spr_hslider, 0, sliderX, y);

draw_set_colour(c_white);
draw_set_font(fnt_1);
draw_set_halign(fa_center);
draw_text(x, y+70, "Bar Length: " + string(barLength));
draw_text(x, y+100, "Left Limit: " + string(leftLimit));
draw_text(x, y+130, "Right Limit: " + string(rightLimit));
draw_text(x, y+160, "Slider Position: " + string(x - leftLimit));
draw_text(x, y+190, "Percentage: " + string(percentage));
draw_text(x, y+220, "Grabbed?: " + string(grab));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>543,33</point>
    <point>544,544</point>
  </PhysicsShapePoints>
</object>
